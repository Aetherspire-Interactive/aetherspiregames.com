name: Release
on:
  push:
    tags:
      - 'v*.*.*'
      - 'v*.*.*-AS.*'
      - 'v*.*.*-BS.*'
      - 'v*.*.*-RS.*'
      - 'v*.*.*-GS.*'
jobs:
  validate-and-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - name: Validate tag against AVNS format
        run: |
          TAG="${GITHUB_REF#refs/tags/}"
          if ! echo "$TAG" | grep -Eq '^v([0-9]+)\.([0-9]+)\.([0-9]+)(-(AS|BS|RS|GS)(\.([0-9]+|[a-z]))?)?(\+[0-9]{4}\.[0-9]{2}\.[0-9]{2})?$'; then
            echo "Tag $TAG violates AVNS format"; exit 1
          fi
      - name: Ensure VERSION matches base SemVer
        run: |
          TAG="${GITHUB_REF#refs/tags/v}"
          BASE="${TAG%%-*}"; BASE="${BASE%%+*}"
          echo "Tag base: $BASE"
          echo "VERSION: $(cat VERSION)"
          [[ "$BASE" == "$(cat VERSION)" ]] || { echo "VERSION mismatch"; exit 1; }
      - name: Build version.json
        run: ./scripts/version-json.sh
      - name: Generate release notes
        id: notes
        uses: actions/github-script@v7
        with:
          script: |
            const tag = context.ref.replace('refs/tags/','');
            const { data } = await github.repos.generateReleaseNotes({
              owner: context.repo.owner, repo: context.repo.repo, tag_name: tag
            });
            core.setOutput('body', data.body);
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          body: ${{ steps.notes.outputs.body }}
          files: public/version.json
          draft: false
          prerelease: ${{ contains(github.ref, '-AS.') || contains(github.ref, '-BS.') || contains(github.ref, '-RS.') || contains(github.ref, '-GS.') }}
